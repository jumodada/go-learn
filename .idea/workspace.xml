<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4919398f-be2d-4de3-a893-00797b0504a0" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2AtEhtyMBSHq8YEhNkh5imRngZs" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go Application",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable..is.expanded": "false",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/wukunyun/code/Go/go-learn/tree",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "com.goide.configuration.GoProjectSettingsConfigurable"
  }
}]]></component>
  <component name="Push.Settings">
    <force-push-targets>
      <force-push-target remote-path="origin" branch="main" />
    </force-push-targets>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tree" />
      <recent name="$PROJECT_DIR$/tree/entry" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build go-learn">
    <configuration name="go build go-learn (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go-learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/map.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build go-learn (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go-learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/array.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build go-learn (3)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go-learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/string.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build go-learn" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="go-learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/zap-test.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build go-learn/embedding" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-learn/embedding" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/embedding/embedding-entry.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build go-learn" />
        <item itemvalue="Go Build.go build go-learn (3)" />
        <item itemvalue="Go Build.go build go-learn (2)" />
        <item itemvalue="Go Build.go build go-learn (1)" />
        <item itemvalue="Go Build.go build go-learn/embedding" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="project init" />
    <MESSAGE value="iota" />
    <MESSAGE value="function" />
    <MESSAGE value="pointer" />
    <MESSAGE value="array" />
    <MESSAGE value="struct" />
    <MESSAGE value="import package" />
    <option name="LAST_COMMIT_MESSAGE" value="import package" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>